{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "AppEnv": {
            "Type": "String",
            "Description": "Application environment for the ALB resource",
            "Default": "QAS"
        }
    },
    "Resources": {
        "ECSServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-JM-ECS-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ecs.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "ecs-service",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                "elasticloadbalancing:DeregisterTargets",
                                "elasticloadbalancing:Describe*",
                                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                "elasticloadbalancing:RegisterTargets",
                                "ec2:Describe*",
                                "ec2:AuthorizeSecurityGroupIngress",
                                "cloudformation:SignalResource"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        },
        "EC2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "InstanceProfileName": {"Fn::Sub": "ForecastDigital-JM-EC2-Role-${AppEnv}"},
                "Path": "/",
                "Roles": [{
                    "Ref": "EC2Role"
                }]
            }
        },
        "EC2Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-JM-EC2-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ecs.amazonaws.com",
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "ecs-service",
                    "PolicyDocument": {
                        "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "ecs:CreateCluster",
                                    "ecs:DeregisterContainerInstance",
                                    "ecs:DiscoverPollEndpoint",
                                    "ecs:Poll",
                                    "ecs:RegisterContainerInstance",
                                    "ecs:StartTelemetrySession",
                                    "ecs:Submit*",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage",
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetAuthorizationToken",
                                    "cloudformation:SignalResource"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:ListTables",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:Scan",
                                    "dynamodb:Query",
                                    "dynamodb:DescribeStream",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DescribeTimeToLive",
                                    "dynamodb:ListStreams",
                                    "dynamodb:DescribeReservedCapacityOfferings",
                                    "dynamodb:DescribeTable",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:DescribeGlobalTable",
                                    "dynamodb:DescribeReservedCapacity",
                                    "dynamodb:GetItem",
                                    "dynamodb:DescribeContinuousBackups",
                                    "dynamodb:DescribeBackup",
                                    "dynamodb:GetRecords"
                                ],
                                "Effect": "Allow",
                                "Resource": [
                                    {"Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/DY-forecastdigital-requests-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/DY-forecastdigital-requestsprocessinglog-${AppEnv}"}
                                ]
                            },
                            {
                                "Action": [
                                    "application-autoscaling:DeregisterScalableTarget",
                                    "application-autoscaling:DescribeScalableTargets",
                                    "application-autoscaling:DescribeScalingActivities",
                                    "application-autoscaling:DescribeScalingPolicies",
                                    "application-autoscaling:PutScalingPolicy",
                                    "application-autoscaling:RegisterScalableTarget",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:ListMetrics",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets",
                                    "ec2:DescribeSecurityGroups"
                                ],
                                "Effect": "Allow",
                                "Resource": "*"
                            },
                            {
                                "Action": ["iam:PassRole"],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringLike": {
                                        "iam:PassedToService": ["application-autoscaling.amazonaws.com", "dax.amazonaws.com"]
                                    }
                                }
                            },
                            {
                                "Action": ["iam:CreateServiceLinkedRole"],
                                "Effect": "Allow",
                                "Resource": "*",
                                "Condition": {
                                    "StringEquals": {
                                        "iam:AWSServiceName": ["replication.dynamodb.amazonaws.com", "dax.amazonaws.com", "dynamodb.application-autoscaling.amazonaws.com"]
                                    }
                                }
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "sns:Publish"
                                ],
                                "Resource": {"Fn::Sub": "arn:aws:sns:*:*:sns-ForecastDigital-GlobalTopic-${AppEnv}"}
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:PutObject",
                                    "s3:GetObject",
                                    "s3:DeleteObject",
                                    "s3:ListBucket",
                                    "s3:GetBucketAcl",
                                    "s3:PutBucketAcl"
                                ],
                                "Resource": [
                                    {"Fn::Sub": "arn:aws:s3:::belc-bigdata-functional-dlk-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:s3:::belc-bigdata-functional-dlk-${AppEnv}/*"},
                                    {"Fn::Sub": "arn:aws:s3:::belc-bigdata-domain-dlk-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:s3:::belc-bigdata-domain-dlk-${AppEnv}/*"},
                                    {"Fn::Sub": "arn:aws:s3:::belc-bigdata-apps-shared-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:s3:::belc-bigdata-apps-shared-${AppEnv}/*"},
                                    {"Fn::Sub": "arn:aws:s3:::forecastdigital-models"},
                                    {"Fn::Sub": "arn:aws:s3:::forecastdigital-models/*"},
                                    {"Fn::Sub": "arn:aws:s3:::sigmoid-belcorp"},
                                    {"Fn::Sub": "arn:aws:s3:::sigmoid-belcorp/*"},
                                    {"Fn::Sub": "arn:aws:s3:::forecastdigital-etl-uploads-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:s3:::forecastdigital-etl-uploads-${AppEnv}/*"}
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:DeleteMessage"
                                ],
                                "Resource": [
                                    {"Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sqs-ForecastDigital-ETLQueue-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sqs-ForecastDigital-NotificationQueue-${AppEnv}"},
                                    {"Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sqs-ForecastDigital-ProcessingStatusQueue-${AppEnv}"}
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:DeleteAlarms",
                                    "cloudwatch:DescribeAlarmHistory",
                                    "cloudwatch:DescribeAlarms",
                                    "cloudwatch:DescribeAlarmsForMetric",
                                    "cloudwatch:GetMetricStatistics",
                                    "cloudwatch:ListMetrics",
                                    "cloudwatch:PutMetricAlarm"
                                ],
                                "Resource": "*"
                            }
                        ]
                    }
                }]
            }
        },
        "AutoscalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-JM-AutoScaling-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "application-autoscaling.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "service-autoscaling",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "application-autoscaling:*",
                                "cloudwatch:DescribeAlarms",
                                "cloudwatch:PutMetricAlarm",
                                "ecs:DescribeServices",
                                "ecs:UpdateService"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        },
        "EMRClusterServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-EMR-CS-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["elasticmapreduce.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Policies": [{
                    "PolicyName": "EMRClusterPolicy",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "ec2:AuthorizeSecurityGroupEgress",
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:CancelSpotInstanceRequests",
                                "ec2:CreateNetworkInterface",
                                "ec2:CreateSecurityGroup",
                                "ec2:CreateTags",
                                "ec2:DeleteNetworkInterface",
                                "ec2:DeleteSecurityGroup",
                                "ec2:DeleteTags",
                                "ec2:DescribeAvailabilityZones",
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeDhcpOptions",
                                "ec2:DescribeImages",
                                "ec2:DescribeInstanceStatus",
                                "ec2:DescribeInstances",
                                "ec2:DescribeKeyPairs",
                                "ec2:DescribeNetworkAcls",
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:DescribePrefixLists",
                                "ec2:DescribeRouteTables",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSpotInstanceRequests",
                                "ec2:DescribeSpotPriceHistory",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeTags",
                                "ec2:DescribeVpcAttribute",
                                "ec2:DescribeVpcEndpoints",
                                "ec2:DescribeVpcEndpointServices",
                                "ec2:DescribeVpcs",
                                "ec2:DetachNetworkInterface",
                                "ec2:ModifyImageAttribute",
                                "ec2:ModifyInstanceAttribute",
                                "ec2:RequestSpotInstances",
                                "ec2:RevokeSecurityGroupEgress",
                                "ec2:RunInstances",
                                "ec2:TerminateInstances",
                                "ec2:DeleteVolume",
                                "ec2:DescribeVolumeStatus",
                                "ec2:DescribeVolumes",
                                "ec2:DetachVolume",
                                "iam:GetRole",
                                "iam:GetRolePolicy",
                                "iam:ListInstanceProfiles",
                                "iam:ListRolePolicies",
                                "iam:PassRole",
                                "s3:CreateBucket",
                                "s3:Get*",
                                "s3:List*",
                                "sdb:BatchPutAttributes",
                                "sdb:Select",
                                "sqs:CreateQueue",
                                "sqs:Delete*",
                                "sqs:GetQueue*",
                                "sqs:PurgeQueue",
                                "sqs:ReceiveMessage",
                                "cloudwatch:PutMetricAlarm",
                                "cloudwatch:DescribeAlarms",
                                "cloudwatch:DeleteAlarms",
                                "application-autoscaling:RegisterScalableTarget",
                                "application-autoscaling:DeregisterScalableTarget",
                                "application-autoscaling:PutScalingPolicy",
                                "application-autoscaling:DeleteScalingPolicy",
                                "application-autoscaling:Describe*"
                            ],
                            "Resource": "*"
                        },
						{
							"Effect": "Allow",
							"Action": "iam:CreateServiceLinkedRole",
							"Resource": "arn:aws:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot*",
							"Condition": {
								"StringLike": {
									"iam:AWSServiceName": "spot.amazonaws.com"
								}
							}
						}]
                    }
                }],
                "Path": "/"
            }
        },
        "EMRClusterinstanceProfileRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-EMR-CIP-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["ec2.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Policies": [{
                    "PolicyName": "EMRClusterProfilePolicy",
                    "PolicyDocument": {
                        "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudwatch:*",
                                "ec2:Describe*",
                                "elasticmapreduce:Describe*",
                                "elasticmapreduce:ListBootstrapActions",
                                "elasticmapreduce:ListClusters",
                                "elasticmapreduce:ListInstanceGroups",
                                "elasticmapreduce:ListInstances",
                                "elasticmapreduce:ListSteps"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:DeleteObject",
                                "s3:ListBucket",
                                "s3:GetBucketAcl",
                                "s3:PutBucketAcl"
                            ],
                            "Resource": [
                                {"Fn::Sub": "arn:aws:s3:::belc-bigdata-functional-dlk-${AppEnv}"},
                                {"Fn::Sub": "arn:aws:s3:::belc-bigdata-functional-dlk-${AppEnv}/*"},
                                {"Fn::Sub": "arn:aws:s3:::belc-bigdata-domain-dlk-${AppEnv}"},
                                {"Fn::Sub": "arn:aws:s3:::belc-bigdata-domain-dlk-${AppEnv}/*"},
                                {"Fn::Sub": "arn:aws:s3:::belc-bigdata-apps-shared-${AppEnv}"},
                                {"Fn::Sub": "arn:aws:s3:::belc-bigdata-apps-shared-${AppEnv}/*"},
                                {"Fn::Sub": "arn:aws:s3:::forecastdigital-models"},
                                {"Fn::Sub": "arn:aws:s3:::forecastdigital-models/*"},
                                {"Fn::Sub": "arn:aws:s3:::sigmoid-belcorp"},
                                {"Fn::Sub": "arn:aws:s3:::sigmoid-belcorp/*"},
                                {"Fn::Sub": "arn:aws:s3:::forecastdigital-etl-uploads-${AppEnv}"},
                                {"Fn::Sub": "arn:aws:s3:::forecastdigital-etl-uploads-${AppEnv}/*"},
                                {"Fn::Sub": "arn:aws:s3:::forecastdigital-emr-logs-${AppEnv}"},
                                {"Fn::Sub": "arn:aws:s3:::forecastdigital-emr-logs-${AppEnv}/*"},
                                {"Fn::Sub": "arn:aws:s3:::${AWS::Region}.elasticmapreduce"},
                                {"Fn::Sub": "arn:aws:s3:::${AWS::Region}.elasticmapreduce/*"}
                            ]
                        }]
                    }
                }],
                "Path": "/"
            }
        },
        "EMRClusterinstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "InstanceProfileName": {"Fn::Sub": "ForecastDigital-EMR-CIP-Role-${AppEnv}"},
                "Path": "/",
                "Roles": [{
                    "Ref": "EMRClusterinstanceProfileRole"
                }]
            }
        },
        "StateMachineExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-SM-Exec-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": { "Fn::Sub" : "states.${AWS::Region}.amazonaws.com" }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "StatesExecutionPolicy",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "lambda:InvokeFunction",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "ForecastDigital-Lambda-Exec-Role-${AppEnv}"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "LambdaExecutionPolicy",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "lambda:InvokeFunction",
                                    "Resource": [
                                        {"Fn::Sub": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:States-ForecastDigital-${AppEnv}*" },
                                        {"Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sqs-ForecastDigital-ETLQueue-${AppEnv}" }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "elasticmapreduce:*",
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [ "sqs:ListQueues", "sqs:ReceiveMessage", "sqs:CreateQueue", "sqs:ReceiveMessage", "sqs:SendMessage","sqs:DeleteMessage","sqs:GetQueueAttributes" ],
                                    "Resource": {"Fn::Sub": "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sqs-ForecastDigital-ETLQueue-${AppEnv}" }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [ "s3:PutObject", "s3:GetObject", "s3:DeleteObject", "s3:ListBucket" ],
                                    "Resource": [
                                        {"Fn::Sub": "arn:aws:s3:::belc-bigdata-functional-dlk-${AppEnv}"},
                                        {"Fn::Sub": "arn:aws:s3:::belc-bigdata-functional-dlk-${AppEnv}/*"},
                                        {"Fn::Sub": "arn:aws:s3:::belc-bigdata-domain-dlk-${AppEnv}"},
                                        {"Fn::Sub": "arn:aws:s3:::belc-bigdata-domain-dlk-${AppEnv}/*"},
                                        {"Fn::Sub": "arn:aws:s3:::belc-bigdata-apps-shared-${AppEnv}"},
                                        {"Fn::Sub": "arn:aws:s3:::belc-bigdata-apps-shared-${AppEnv}/*"},
                                        {"Fn::Sub": "arn:aws:s3:::forecastdigital-models"},
                                        {"Fn::Sub": "arn:aws:s3:::forecastdigital-models/*"},
                                        {"Fn::Sub": "arn:aws:s3:::sigmoid-belcorp"},
                                        {"Fn::Sub": "arn:aws:s3:::sigmoid-belcorp/*"},
                                        {"Fn::Sub": "arn:aws:s3:::forecastdigital-etl-uploads-${AppEnv}"},
                                        {"Fn::Sub": "arn:aws:s3:::forecastdigital-etl-uploads-${AppEnv}/*"}
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": "states:*",
                                    "Resource": {"Fn::Sub": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:States-ForecastDigital-${AppEnv}*"}
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [ "sns:Publish", "sns:GetTopicAttributes", "sns:List*", "sns:CreateTopic", "sns:DeleteTopic" ],
                                    "Resource": {"Fn::Sub": "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sns-ForecastDigital-GlobalTopic-${AppEnv}"}
                                }
                            ]
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "ECSServiceRole": {
            "Value": {
                "Ref": "ECSServiceRole"
            }
        },
        "EC2InstanceProfile": {
            "Value": {
                "Ref": "EC2InstanceProfile"
            }
        },
        "AutoscalingRole": {
            "Value": {
                "Ref": "AutoscalingRole"
            }
        },
        "EMRClusterServiceRole": {
            "Value": {
                "Ref": "EMRClusterServiceRole"
            }
        },
        "EMRClusterinstanceProfile": {
            "Value": {
                "Ref": "EMRClusterinstanceProfile"
            }
        },
        "EMRClusterinstanceProfileRole": {
            "Value": {
                "Ref": "EMRClusterinstanceProfileRole"
            }
        },
        "StateMachineExecutionRole": {
            "Value": {
                "Ref": "StateMachineExecutionRole"
            }
        },
        "LambdaExecutionRole": {
            "Value": {
                "Ref": "LambdaExecutionRole"
            }
        }
    }
}